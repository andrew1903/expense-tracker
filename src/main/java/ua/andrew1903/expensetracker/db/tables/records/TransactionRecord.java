/*
 * This file is generated by jOOQ.
 */
package ua.andrew1903.expensetracker.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import ua.andrew1903.expensetracker.db.tables.TransactionTable;

import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record5<Integer, LocalDate, Double, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>expense_tracker.transaction.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>expense_tracker.transaction.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>expense_tracker.transaction.date</code>.
     */
    public void setDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>expense_tracker.transaction.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>expense_tracker.transaction.amount</code>.
     */
    public void setAmount(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>expense_tracker.transaction.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>expense_tracker.transaction.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>expense_tracker.transaction.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>expense_tracker.transaction.category_id</code>.
     */
    public void setCategoryId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>expense_tracker.transaction.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, LocalDate, Double, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, LocalDate, Double, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TransactionTable.TABLE.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return TransactionTable.TABLE.DATE;
    }

    @Override
    public Field<Double> field3() {
        return TransactionTable.TABLE.AMOUNT;
    }

    @Override
    public Field<String> field4() {
        return TransactionTable.TABLE.TYPE;
    }

    @Override
    public Field<Integer> field5() {
        return TransactionTable.TABLE.CATEGORY_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getDate();
    }

    @Override
    public Double component3() {
        return getAmount();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public Integer component5() {
        return getCategoryId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getDate();
    }

    @Override
    public Double value3() {
        return getAmount();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public Integer value5() {
        return getCategoryId();
    }

    @Override
    public TransactionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public TransactionRecord value3(Double value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public TransactionRecord value5(Integer value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public TransactionRecord values(Integer value1, LocalDate value2, Double value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(TransactionTable.TABLE);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(Integer id, LocalDate date, Double amount, String type, Integer categoryId) {
        super(TransactionTable.TABLE);

        setId(id);
        setDate(date);
        setAmount(amount);
        setType(type);
        setCategoryId(categoryId);
        resetChangedOnNotNull();
    }
}
